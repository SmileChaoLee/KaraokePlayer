
apply plugin: 'com.android.library'

android {
    compileSdk 34
    /*
    gradle.startParameter.getTaskNames().each { task ->
        if (task.containsIgnoreCase("exoplayer")) {
            externalNativeBuild {
                cmake {
                    path file('../ffmpeg/src/main/jni/CMakeLists.txt')
                }
            }
        }
    }
    */

    ndkVersion '22.1.7171670'
    // or
    // ndkPath "home/chaolee/Android/Sdk/ndk/21.4.7075529"  // Point to your own NDK

    defaultConfig {
        targetSdk 34
        consumerProguardFiles 'proguard-rules.txt'
     	testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] // Disable the automatic ndk-build call by Android Studio.
    }

    namespace 'com.google.android.exoplayer2.ext.ffmpeg'
}

// Configure the native build only if ffmpeg is present to avoid gradle sync
// failures if ffmpeg hasn't been built according to the README instructions.
gradle.startParameter.getTaskNames().each { task ->
    if (task.containsIgnoreCase("exoplayer")) {
        if (project.file('src/main/jni/ffmpeg').exists()) {
            android.externalNativeBuild.cmake.path = 'src/main/jni/CMakeLists.txt'
            android.externalNativeBuild.cmake.version = '3.7.1+'
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.8.1'
    implementation 'com.google.android.exoplayer:exoplayer:2.18.2'
    compileOnly 'org.checkerframework:checker-qual:3.42.0'
    compileOnly 'org.jetbrains.kotlin:kotlin-annotations-jvm:1.9.22'
}
